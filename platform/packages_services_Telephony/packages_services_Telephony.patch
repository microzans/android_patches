From cb113475ebd8392a7edf478811c1d98f34339bfb Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sun, 23 Nov 2014 15:48:23 +0700
Subject: [PATCH 1/3] Telephony: GSM: remove 'Carrier Settings' regardless of
 csp_enabled

Carrier Settings should be removed when config_carrier_settings_enable
is false. csp_enabled has nothing to do with it.

Fixes "Carrier Settings" appearing and crashing when the user clicks
on it.

Change-Id: I31c508f2353eb15a096aa279e71c4be4ce89abb8
---
 src/com/android/phone/GsmUmtsOptions.java | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

diff --git a/src/com/android/phone/GsmUmtsOptions.java b/src/com/android/phone/GsmUmtsOptions.java
index 463156d..25e2228 100755
--- a/src/com/android/phone/GsmUmtsOptions.java
+++ b/src/com/android/phone/GsmUmtsOptions.java
@@ -143,15 +143,14 @@ public class GsmUmtsOptions {
                 log("[CSP] Disabling Operator Selection menu.");
                 mPrefScreen.removePreference(mButtonOperatorSelectionExpand);
             }
-
-            // Read platform settings for carrier settings
-            final boolean isCarrierSettingsEnabled = mPrefActivity.getResources().getBoolean(
-                    R.bool.config_carrier_settings_enable);
-            if (!isCarrierSettingsEnabled) {
-                Preference pref = mPrefScreen.findPreference(BUTTON_CARRIER_SETTINGS_KEY);
-                if (pref != null) {
-                    mPrefScreen.removePreference(pref);
-                }
+        }
+        // Read platform settings for carrier settings
+        final boolean isCarrierSettingsEnabled = mPrefActivity.getResources().getBoolean(
+                R.bool.config_carrier_settings_enable);
+        if (!isCarrierSettingsEnabled) {
+            Preference pref = mPrefScreen.findPreference(BUTTON_CARRIER_SETTINGS_KEY);
+            if (pref != null) {
+                mPrefScreen.removePreference(pref);
             }
         }
         if (!mRemovedAPNExpand) {
-- 
1.9.3 (Apple Git-50)


From a6f18b5a0580271dd1497d1102a406af9d7379d6 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sun, 23 Nov 2014 15:16:36 +0700
Subject: [PATCH 2/3] Telephony: fix getIccOperatorNumeric

The current logic is broken because getDataNetworkTypeForSubscriber
returns the translated network type while getFamilyFromRadioTechnology
requires the raw radio technology.

Fixed by using Phone.getIccCard API instead.

Fixes semi-randomly broken APN settings.

Change-Id: I836f6d4316984cdc8f5a34203c83ebf33a41b121
---
 src/com/android/phone/PhoneInterfaceManager.java | 23 +++--------------------
 1 file changed, 3 insertions(+), 20 deletions(-)

diff --git a/src/com/android/phone/PhoneInterfaceManager.java b/src/com/android/phone/PhoneInterfaceManager.java
index 421a2ab..6c23a8e 100644
--- a/src/com/android/phone/PhoneInterfaceManager.java
+++ b/src/com/android/phone/PhoneInterfaceManager.java
@@ -1631,26 +1631,9 @@ public class PhoneInterfaceManager extends ITelephony.Stub {
      */
     public String getIccOperatorNumeric(long subId) {
         String iccOperatorNumeric = null;
-        int netType = getDataNetworkTypeForSubscriber(subId);
-        int family = UiccController.getFamilyFromRadioTechnology(netType);
-        if (UiccController.APP_FAM_UNKNOWN == family) {
-            int phoneType = getActivePhoneTypeForSubscriber(subId);
-            switch (phoneType) {
-                case TelephonyManager.PHONE_TYPE_GSM:
-                    family = UiccController.APP_FAM_3GPP;
-                    break;
-                case TelephonyManager.PHONE_TYPE_CDMA:
-                    family = UiccController.APP_FAM_3GPP2;
-                    break;
-            }
-        }
-
-        if (UiccController.APP_FAM_UNKNOWN != family) {
-            int slotId = SubscriptionManager.getPhoneId(subId);
-            IccRecords iccRecords = UiccController.getInstance().getIccRecords(slotId, family);
-            if (iccRecords != null) {
-                iccOperatorNumeric = iccRecords.getOperatorNumeric();
-            }
+        IccRecords iccRecords = getPhone(subId).getIccCard().getIccRecords();
+        if (iccRecords != null) {
+            iccOperatorNumeric = iccRecords.getOperatorNumeric();
         }
         return iccOperatorNumeric;
     }
-- 
1.9.3 (Apple Git-50)


From 7e4d612779628855c5c9553a62d74ff121a46d66 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sun, 23 Nov 2014 15:57:20 +0700
Subject: [PATCH 3/3] Telephony: MSim: enable preferred mode button for all
 phones

HACK to allow changing network mode on multi-SIM

Change-Id: I79cd6dfb1653c9c1ef14b8965c9af2bd0f5792cb
---
 res/values/strings.xml                             | 10 ++++++++
 res/xml/msim_network_sub_setting.xml               |  4 ++--
 .../phone/msim/MSimMobileNetworkSubSettings.java   | 27 +++++++---------------
 3 files changed, 20 insertions(+), 21 deletions(-)

diff --git a/res/values/strings.xml b/res/values/strings.xml
index 40a0aca..27667c4 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -551,6 +551,16 @@
     <string name="preferred_network_mode_gsm_only_choice">GSM only</string>
     <string name="preferred_network_mode_gsm_wcdma_preferred_choice">GSM/WCDMA preferred</string>
 
+    <string-array name="preferred_network_mode_choices_2" translatable="false">
+        <item>@string/preferred_network_mode_wcdma_only_choice</item>
+        <item>@string/preferred_network_mode_gsm_only_choice</item>
+        <item>@string/preferred_network_mode_gsm_wcdma_preferred_choice</item>
+    </string-array>
+    <string-array name="preferred_network_mode_values_2"  translatable="false">
+        <item>"2"</item>
+        <item>"1"</item>
+        <item>"0"</item>
+    </string-array>
 
     <string-array name="preferred_network_mode_choices" translatable="false">
         <item>@string/preferred_network_mode_td_scdma_lte_gsm_wcdma_cdma_evdo_choice </item>
diff --git a/res/xml/msim_network_sub_setting.xml b/res/xml/msim_network_sub_setting.xml
index 6cd0eb5..72101de 100644
--- a/res/xml/msim_network_sub_setting.xml
+++ b/res/xml/msim_network_sub_setting.xml
@@ -40,8 +40,8 @@
         android:key="preferred_network_mode_key"
         android:title="@string/preferred_network_mode_title"
         android:summary="@string/preferred_network_mode_summary"
-        android:entries="@array/preferred_network_mode_choices"
-        android:entryValues="@array/preferred_network_mode_values"
+        android:entries="@array/preferred_network_mode_choices_2"
+        android:entryValues="@array/preferred_network_mode_values_2"
         android:dialogTitle="@string/preferred_network_mode_dialogtitle" />
 
 </PreferenceScreen>
diff --git a/src/com/android/phone/msim/MSimMobileNetworkSubSettings.java b/src/com/android/phone/msim/MSimMobileNetworkSubSettings.java
index 609b206..2a3bc99 100644
--- a/src/com/android/phone/msim/MSimMobileNetworkSubSettings.java
+++ b/src/com/android/phone/msim/MSimMobileNetworkSubSettings.java
@@ -209,32 +209,21 @@ public class MSimMobileNetworkSubSettings extends PreferenceActivity
             mUPLMNPref.getIntent().putExtra(PhoneConstants.SUBSCRIPTION_KEY, mPhone.getPhoneId());
         }
 
-        boolean isLteOnCdma = mPhone.getLteOnCdmaMode() == PhoneConstants.LTE_ON_CDMA_TRUE;
-        if (getResources().getBoolean(R.bool.world_phone) == true) {
-            // set the listener for the mButtonPreferredNetworkMode list preference so we can issue
-            // change Preferred Network Mode.
-            mButtonPreferredNetworkMode.setOnPreferenceChangeListener(this);
+        // set the listener for the mButtonPreferredNetworkMode list preference so we can issue
+        // change Preferred Network Mode.
+        mButtonPreferredNetworkMode.setOnPreferenceChangeListener(this);
 
-            //Get the networkMode from Settings.System and displays it
-            int settingsNetworkMode = getPreferredNetworkMode();
-            mButtonPreferredNetworkMode.setValue(Integer.toString(settingsNetworkMode));
+        //Get the networkMode from Settings.System and displays it
+        int settingsNetworkMode = getPreferredNetworkMode();
+        mButtonPreferredNetworkMode.setValue(Integer.toString(settingsNetworkMode));
+
+        if (getResources().getBoolean(R.bool.world_phone) == true) {
             mCdmaOptions = new CdmaOptions(this, prefSet, mPhone);
             mGsmUmtsOptions = new GsmUmtsOptions(this, prefSet, mPhone.getPhoneId());
         } else {
-            if (!isLteOnCdma) {
-                prefSet.removePreference(mButtonPreferredNetworkMode);
-            }
             int phoneType = mPhone.getPhoneType();
             if (phoneType == PhoneConstants.PHONE_TYPE_CDMA) {
                 mCdmaOptions = new CdmaOptions(this, prefSet, mPhone);
-                if (isLteOnCdma) {
-                    mButtonPreferredNetworkMode.setOnPreferenceChangeListener(this);
-
-                    int settingsNetworkMode = getPreferredNetworkMode();
-                    mButtonPreferredNetworkMode.setValue(
-                            Integer.toString(settingsNetworkMode));
-                }
-
             } else if (phoneType == PhoneConstants.PHONE_TYPE_GSM) {
                 mGsmUmtsOptions = new GsmUmtsOptions(this, prefSet, mPhone.getPhoneId());
             } else {
-- 
1.9.3 (Apple Git-50)

